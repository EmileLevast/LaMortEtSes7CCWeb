# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

#pour declencher un build git tag --delete v1.0.0 && git push origin :v1.0.0 && git tag v1.0.0 && git push origin --tags
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 20
      uses: actions/setup-java@v4
      with:
        java-version: '20'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    
    - name: Build Desktop with Gradle 8.9
      run: gradle packageMsi

    - name: Build Apk with Gradle 8.9
      run: gradle assembleDebug

    - name: Build FatJar Ktor with Gradle 8.9
      run: gradle buildFatJar

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload release Desktop asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./composeApp/build/compose/binaries/main/msi/org.levast.project-1.0.0.msi
        asset_name: org.levast.project-1.0.0.msi
        asset_content_type: application/octet-stream

    - name: Upload release Android asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./composeApp/build/outputs/apk/debug/composeApp-debug.apk
        asset_name: composeApp-debug.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload release Ktor Server asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server/build/libs/server-all.jar
        asset_name: server-all.jar
        asset_content_type: application/java-archive

    - name: Publish release
      uses: StuYarrow/publish-release@v1.1.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        id: ${{ steps.create_release.outputs.id }}

